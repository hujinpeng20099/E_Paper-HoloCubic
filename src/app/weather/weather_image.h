#ifndef __WEATHER_IMAGE_H
#define __WEATHER_IMAGE_H

#include "lvgl.h"


#ifndef LV_ATTRIBUTE_MEM_ALIGN
#define LV_ATTRIBUTE_MEM_ALIGN
#endif

#ifndef LV_ATTRIBUTE_IMG_AIR
#define LV_ATTRIBUTE_IMG_AIR
#endif

const LV_ATTRIBUTE_MEM_ALIGN LV_ATTRIBUTE_LARGE_CONST LV_ATTRIBUTE_IMG_AIR uint8_t air_map[] = {
  0x00, 0x00, 0x00, 0x00, 
  0x01, 0x00, 0x0c, 0x00, 
  0x03, 0x80, 0x0c, 0x00, 
  0x03, 0xc0, 0x1e, 0x00, 
  0x07, 0xe0, 0x3e, 0x00, 
  0x07, 0xe0, 0x7e, 0x00, 
  0x07, 0xf0, 0xff, 0x00, 
  0x0f, 0xf9, 0xff, 0x00, 
  0x0f, 0xf3, 0xff, 0x00, 
  0x0f, 0xf3, 0xff, 0x80, 
  0x0f, 0x67, 0xff, 0x80, 
  0x0f, 0x6f, 0xff, 0x80, 
  0x0f, 0x4f, 0xff, 0x80, 
  0x0f, 0x4f, 0xef, 0x80, 
  0x0f, 0x5f, 0xef, 0x80, 
  0x0f, 0x9f, 0xef, 0x80, 
  0x07, 0x9f, 0xef, 0x80, 
  0x01, 0x9f, 0xdf, 0x80, 
  0x00, 0x0f, 0xdf, 0x80, 
  0x00, 0x0f, 0xdf, 0x80, 
  0x00, 0x07, 0x9f, 0x80, 
  0x00, 0x07, 0xbf, 0x00, 
  0x00, 0x03, 0x3e, 0x00, 
  0x00, 0x01, 0x3c, 0x00, 
  0x00, 0x02, 0x00, 0x00, 
  0x00, 0x02, 0x00, 0x00, 
  0x00, 0x04, 0x00, 0x00, 
  0x00, 0x0c, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 
};

const lv_img_dsc_t air = {
  .header.cf = LV_IMG_CF_ALPHA_1BIT,
  .header.always_zero = 0,
  .header.reserved = 0,
  .header.w = 32,
  .header.h = 31,
  .data_size = 124,
  .data = air_map,
};

#ifndef LV_ATTRIBUTE_IMG_HUM
#define LV_ATTRIBUTE_IMG_HUM
#endif

const LV_ATTRIBUTE_MEM_ALIGN LV_ATTRIBUTE_LARGE_CONST LV_ATTRIBUTE_IMG_HUM uint8_t hum_map[] = {
  0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 
  0x00, 0x01, 0x80, 0x00, 
  0x00, 0x03, 0xc0, 0x00, 
  0x00, 0x07, 0xe0, 0x00, 
  0x00, 0x0e, 0x70, 0x00, 
  0x00, 0x1c, 0x38, 0x00, 
  0x00, 0x38, 0x1c, 0x00, 
  0x00, 0x70, 0x0e, 0x00, 
  0x00, 0x60, 0x06, 0x00, 
  0x00, 0xc0, 0x03, 0x00, 
  0x01, 0xc0, 0x03, 0x80, 
  0x01, 0x80, 0x01, 0x80, 
  0x03, 0x00, 0x00, 0xc0, 
  0x03, 0x00, 0x00, 0xc0, 
  0x03, 0x00, 0x7c, 0xc0, 
  0x06, 0x00, 0xfe, 0x60, 
  0x06, 0x01, 0xfe, 0x60, 
  0x06, 0x41, 0xfe, 0x60, 
  0x06, 0x7f, 0xfe, 0x60, 
  0x06, 0x7f, 0xfe, 0x60, 
  0x06, 0x7f, 0xfe, 0x60, 
  0x03, 0x3f, 0xfc, 0xc0, 
  0x03, 0x1f, 0xf8, 0xc0, 
  0x01, 0x8f, 0xf1, 0x80, 
  0x01, 0xc3, 0xc3, 0x80, 
  0x00, 0xe0, 0x07, 0x00, 
  0x00, 0x78, 0x1e, 0x00, 
  0x00, 0x1f, 0xf8, 0x00, 
  0x00, 0x07, 0xe0, 0x00, 
  0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 
};

const lv_img_dsc_t hum = {
  .header.cf = LV_IMG_CF_ALPHA_1BIT,
  .header.always_zero = 0,
  .header.reserved = 0,
  .header.w = 32,
  .header.h = 32,
  .data_size = 128,
  .data = hum_map,
};


#ifndef LV_ATTRIBUTE_IMG_TEMP
#define LV_ATTRIBUTE_IMG_TEMP
#endif

const LV_ATTRIBUTE_MEM_ALIGN LV_ATTRIBUTE_LARGE_CONST LV_ATTRIBUTE_IMG_TEMP uint8_t temp_map[] = {
  0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 
  0x00, 0x1e, 0x00, 0x00, 
  0x00, 0x7f, 0x8f, 0xe0, 
  0x00, 0x61, 0x8f, 0xe0, 
  0x00, 0xc0, 0xc0, 0x00, 
  0x00, 0xc0, 0xc0, 0x00, 
  0x00, 0xc0, 0xc0, 0x00, 
  0x00, 0xc0, 0xcf, 0xe0, 
  0x00, 0xcc, 0xcf, 0xe0, 
  0x00, 0xcc, 0xc0, 0x00, 
  0x00, 0xcc, 0xc0, 0x00, 
  0x00, 0xcc, 0xc0, 0x00, 
  0x00, 0xcc, 0xcf, 0xe0, 
  0x00, 0xcc, 0xcf, 0xe0, 
  0x00, 0xcc, 0xc0, 0x00, 
  0x01, 0xcc, 0xe0, 0x00, 
  0x03, 0x8c, 0x70, 0x00, 
  0x03, 0x1e, 0x30, 0x00, 
  0x07, 0x3f, 0x38, 0x00, 
  0x06, 0x7f, 0x98, 0x00, 
  0x06, 0x7f, 0x98, 0x00, 
  0x06, 0x7f, 0x98, 0x00, 
  0x06, 0x7f, 0x98, 0x00, 
  0x07, 0x3f, 0x38, 0x00, 
  0x03, 0x1e, 0x30, 0x00, 
  0x03, 0x80, 0x70, 0x00, 
  0x01, 0xe1, 0xe0, 0x00, 
  0x00, 0xff, 0xc0, 0x00, 
  0x00, 0x3f, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 
};

const lv_img_dsc_t temp = {
  .header.cf = LV_IMG_CF_ALPHA_1BIT,
  .header.always_zero = 0,
  .header.reserved = 0,
  .header.w = 32,
  .header.h = 32,
  .data_size = 128,
  .data = temp_map,
};


#ifndef LV_ATTRIBUTE_IMG_BAOXUE
#define LV_ATTRIBUTE_IMG_BAOXUE
#endif

const LV_ATTRIBUTE_MEM_ALIGN LV_ATTRIBUTE_LARGE_CONST LV_ATTRIBUTE_IMG_BAOXUE uint8_t baoxue_map[] = {
  0x00, 0x00, 0x00, 0x07, 0xf0, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x1f, 0xfc, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x7f, 0xff, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0xff, 0xff, 0x80, 0x00, 0x00, 
  0x00, 0x00, 0x01, 0xff, 0xff, 0xc0, 0x00, 0x00, 
  0x00, 0x00, 0x03, 0xff, 0xff, 0xe0, 0x00, 0x00, 
  0x00, 0x00, 0x07, 0xff, 0xff, 0xe0, 0x00, 0x00, 
  0x00, 0x00, 0x07, 0xff, 0xff, 0xf0, 0x00, 0x00, 
  0x00, 0x00, 0x0f, 0xff, 0xff, 0xf0, 0x00, 0x00, 
  0x00, 0x00, 0x0f, 0xff, 0xff, 0xf8, 0x00, 0x00, 
  0x00, 0x00, 0x0f, 0xff, 0xff, 0xf8, 0x00, 0x00, 
  0x00, 0x00, 0x1f, 0xff, 0xff, 0xfc, 0x00, 0x00, 
  0x00, 0x07, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x00, 
  0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 
  0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 
  0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 
  0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 
  0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 
  0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 
  0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 
  0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 
  0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 
  0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 
  0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 
  0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 
  0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 
  0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 
  0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 
  0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 
  0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 
  0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 
  0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 
  0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 
  0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 
  0x00, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x00, 
  0x00, 0x01, 0xff, 0xff, 0xff, 0xff, 0x80, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x04, 0x00, 0x01, 0x00, 0x00, 0x40, 0x00, 
  0x00, 0x0e, 0x00, 0x03, 0x80, 0x00, 0xe0, 0x00, 
  0x00, 0x84, 0x00, 0x21, 0x08, 0x00, 0x42, 0x00, 
  0x00, 0xc4, 0xe0, 0x39, 0x38, 0x0e, 0x46, 0x00, 
  0x00, 0x64, 0xc0, 0x19, 0x30, 0x06, 0x4c, 0x00, 
  0x00, 0x0e, 0x00, 0x03, 0x80, 0x00, 0xe0, 0x00, 
  0x00, 0x0e, 0x00, 0x03, 0x80, 0x00, 0xe0, 0x00, 
  0x00, 0x65, 0xc0, 0x1d, 0x70, 0x07, 0x4c, 0x00, 
  0x00, 0xc4, 0xe0, 0x39, 0x38, 0x0e, 0x46, 0x00, 
  0x00, 0x84, 0x20, 0x21, 0x08, 0x0a, 0x42, 0x00, 
  0x00, 0x0e, 0x00, 0x03, 0x80, 0x00, 0xe0, 0x00, 
  0x00, 0x04, 0x00, 0x01, 0x00, 0x00, 0x40, 0x00, 
  0x00, 0x00, 0x08, 0x00, 0x00, 0xc0, 0x00, 0x00, 
  0x00, 0x00, 0x08, 0x00, 0x00, 0xc0, 0x00, 0x00, 
  0x00, 0x00, 0x08, 0x00, 0x1c, 0x0c, 0x00, 0x00, 
  0x00, 0x01, 0x88, 0xc0, 0x0c, 0x0c, 0x00, 0x00, 
  0x00, 0x00, 0xc9, 0x80, 0x0a, 0x14, 0x00, 0x00, 
  0x00, 0x00, 0x1e, 0x00, 0x00, 0xc0, 0x00, 0x00, 
  0x00, 0x00, 0x1c, 0x00, 0x01, 0xa0, 0x00, 0x00, 
  0x00, 0x00, 0x2a, 0x00, 0x0c, 0x0c, 0x00, 0x00, 
  0x00, 0x01, 0xc9, 0xc0, 0x1c, 0x0e, 0x00, 0x00, 
  0x00, 0x01, 0x48, 0x40, 0x00, 0xc0, 0x00, 0x00, 
  0x00, 0x00, 0x1c, 0x00, 0x00, 0xc0, 0x00, 0x00, 
  0x00, 0x00, 0x08, 0x00, 0x00, 0xc0, 0x00, 0x00, 
  0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 
};

const lv_img_dsc_t baoxue = {
  .header.cf = LV_IMG_CF_ALPHA_1BIT,
  .header.always_zero = 0,
  .header.reserved = 0,
  .header.w = 64,
  .header.h = 64,
  .data_size = 512,
  .data = baoxue_map,
};


#ifndef LV_ATTRIBUTE_IMG_BINGBAO
#define LV_ATTRIBUTE_IMG_BINGBAO
#endif

const LV_ATTRIBUTE_MEM_ALIGN LV_ATTRIBUTE_LARGE_CONST LV_ATTRIBUTE_IMG_BINGBAO uint8_t bingbao_map[] = {
  0x00, 0x00, 0x00, 0x07, 0xf0, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x3f, 0xfe, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0xff, 0xff, 0x80, 0x00, 0x00, 
  0x00, 0x00, 0x01, 0xff, 0xff, 0xc0, 0x00, 0x00, 
  0x00, 0x00, 0x03, 0xff, 0xff, 0xe0, 0x00, 0x00, 
  0x00, 0x00, 0x07, 0xff, 0xff, 0xf0, 0x00, 0x00, 
  0x00, 0x00, 0x0f, 0xff, 0xff, 0xf8, 0x00, 0x00, 
  0x00, 0x00, 0x0f, 0xff, 0xff, 0xf8, 0x00, 0x00, 
  0x00, 0x00, 0x1f, 0xff, 0xff, 0xfc, 0x00, 0x00, 
  0x00, 0x00, 0x1f, 0xff, 0xff, 0xfc, 0x00, 0x00, 
  0x00, 0x00, 0x3f, 0xff, 0xff, 0xfe, 0x00, 0x00, 
  0x00, 0x00, 0x3f, 0xff, 0xff, 0xfe, 0x00, 0x00, 
  0x00, 0x00, 0x3f, 0xff, 0xff, 0xfe, 0x00, 0x00, 
  0x00, 0x03, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 
  0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 
  0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 
  0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 
  0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 
  0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 
  0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 
  0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 
  0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 
  0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 
  0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 
  0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 
  0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 
  0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 
  0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 
  0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 
  0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 
  0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 
  0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 
  0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 
  0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 
  0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 
  0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 
  0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 
  0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 
  0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 
  0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 
  0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 
  0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x01, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x03, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x07, 0xff, 0xc0, 0x00, 0x0f, 0x00, 0x00, 
  0x00, 0x07, 0xff, 0xe0, 0x00, 0x3f, 0x80, 0x00, 
  0x00, 0x0f, 0xff, 0xe0, 0x00, 0x7f, 0xe0, 0x00, 
  0x00, 0x1f, 0xff, 0xe0, 0x01, 0xff, 0xf0, 0x00, 
  0x00, 0x1f, 0xff, 0xf0, 0x01, 0xff, 0xf8, 0x00, 
  0x00, 0x1f, 0xff, 0xf0, 0x01, 0xff, 0xf8, 0x00, 
  0x00, 0x1f, 0xff, 0xf0, 0x01, 0xff, 0xf8, 0x00, 
  0x00, 0x0f, 0xff, 0xf0, 0x01, 0xff, 0xf8, 0x00, 
  0x00, 0x0f, 0xff, 0xf0, 0x01, 0xff, 0xf8, 0x00, 
  0x00, 0x0f, 0xff, 0xe0, 0x01, 0xff, 0xf8, 0x00, 
  0x00, 0x07, 0xff, 0xc0, 0x01, 0xff, 0xf8, 0x00, 
  0x00, 0x07, 0xff, 0x80, 0x00, 0xff, 0xf0, 0x00, 
  0x00, 0x07, 0xff, 0x00, 0x00, 0x3f, 0xc0, 0x00, 
  0x00, 0x00, 0x7f, 0x00, 0x00, 0x1f, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 
};

const lv_img_dsc_t bingbao = {
  .header.cf = LV_IMG_CF_ALPHA_1BIT,
  .header.always_zero = 0,
  .header.reserved = 0,
  .header.w = 64,
  .header.h = 64,
  .data_size = 512,
  .data = bingbao_map,
};


#ifndef LV_ATTRIBUTE_IMG_DAYU
#define LV_ATTRIBUTE_IMG_DAYU
#endif

const LV_ATTRIBUTE_MEM_ALIGN LV_ATTRIBUTE_LARGE_CONST LV_ATTRIBUTE_IMG_DAYU uint8_t dayu_map[] = {
  0x00, 0x00, 0x00, 0x07, 0xf0, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x3f, 0xfe, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0xff, 0xff, 0x80, 0x00, 0x00, 
  0x00, 0x00, 0x01, 0xff, 0xff, 0xc0, 0x00, 0x00, 
  0x00, 0x00, 0x03, 0xff, 0xff, 0xe0, 0x00, 0x00, 
  0x00, 0x00, 0x07, 0xff, 0xff, 0xf0, 0x00, 0x00, 
  0x00, 0x00, 0x0f, 0xff, 0xff, 0xf8, 0x00, 0x00, 
  0x00, 0x00, 0x1f, 0xff, 0xff, 0xfc, 0x00, 0x00, 
  0x00, 0x00, 0x1f, 0xff, 0xff, 0xfc, 0x00, 0x00, 
  0x00, 0x00, 0x3f, 0xff, 0xff, 0xfe, 0x00, 0x00, 
  0x00, 0x00, 0x3f, 0xff, 0xff, 0xfe, 0x00, 0x00, 
  0x00, 0x00, 0x7f, 0xff, 0xff, 0xff, 0x00, 0x00, 
  0x00, 0x00, 0x7f, 0xff, 0xff, 0xff, 0x00, 0x00, 
  0x00, 0x00, 0x7f, 0xff, 0xff, 0xff, 0x00, 0x00, 
  0x00, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x00, 
  0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 
  0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 
  0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 
  0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 
  0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 
  0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 
  0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 
  0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 
  0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 
  0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 
  0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 
  0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 
  0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 
  0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 
  0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 
  0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 
  0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 
  0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 
  0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 
  0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 
  0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 
  0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 
  0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 
  0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 
  0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 
  0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 
  0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 
  0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 
  0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x10, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 
  0x00, 0x70, 0x00, 0x01, 0xc0, 0x00, 0x0e, 0x00, 
  0x00, 0xf8, 0x00, 0x07, 0xc0, 0x00, 0x1f, 0x00, 
  0x01, 0xfc, 0x00, 0x0f, 0xe0, 0x00, 0x3f, 0x80, 
  0x03, 0xfc, 0x00, 0x1f, 0xf0, 0x00, 0x7f, 0x80, 
  0x07, 0xfe, 0x00, 0x3f, 0xf0, 0x00, 0xff, 0xc0, 
  0x0f, 0xfe, 0x00, 0x3f, 0xf8, 0x01, 0xff, 0xc0, 
  0x0f, 0xff, 0x00, 0x7f, 0xf8, 0x01, 0xff, 0xe0, 
  0x1f, 0xff, 0x00, 0x7f, 0xf8, 0x03, 0xff, 0xe0, 
  0x1f, 0xff, 0x00, 0xff, 0xf8, 0x03, 0xff, 0xe0, 
  0x1f, 0xff, 0x00, 0xff, 0xf8, 0x03, 0xff, 0xe0, 
  0x1f, 0xff, 0x00, 0xff, 0xf8, 0x03, 0xff, 0xe0, 
  0x1f, 0xff, 0x00, 0xff, 0xf8, 0x03, 0xff, 0xe0, 
  0x0f, 0xfe, 0x00, 0x7f, 0xf8, 0x03, 0xff, 0xc0, 
  0x0f, 0xfe, 0x00, 0x3f, 0xf0, 0x01, 0xff, 0xc0, 
  0x07, 0xfc, 0x00, 0x1f, 0xe0, 0x00, 0xff, 0x80, 
  0x01, 0xf0, 0x00, 0x0f, 0x80, 0x00, 0x3e, 0x00, 
};

const lv_img_dsc_t dayu = {
  .header.cf = LV_IMG_CF_ALPHA_1BIT,
  .header.always_zero = 0,
  .header.reserved = 0,
  .header.w = 64,
  .header.h = 64,
  .data_size = 512,
  .data = dayu_map,
};


#ifndef LV_ATTRIBUTE_IMG_DUOYUN
#define LV_ATTRIBUTE_IMG_DUOYUN
#endif

const LV_ATTRIBUTE_MEM_ALIGN LV_ATTRIBUTE_LARGE_CONST LV_ATTRIBUTE_IMG_DUOYUN uint8_t duoyun_map[] = {
  0x00, 0x00, 0x00, 0x00, 0x3f, 0x80, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x01, 0xff, 0xe0, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x07, 0xff, 0xf8, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x0f, 0xff, 0xfc, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x3f, 0xfe, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0x00, 0x00, 
  0x00, 0x00, 0x01, 0xff, 0x03, 0xff, 0x80, 0x00, 
  0x00, 0x00, 0x07, 0xff, 0xc0, 0xff, 0xc0, 0x00, 
  0x00, 0x00, 0x0f, 0xff, 0xf0, 0x7f, 0xc0, 0x00, 
  0x00, 0x00, 0x3f, 0xff, 0xf8, 0x7f, 0xc0, 0x00, 
  0x00, 0x00, 0x7f, 0xff, 0xfc, 0x3f, 0xe0, 0x00, 
  0x00, 0x00, 0xff, 0xff, 0xfe, 0x1f, 0xe0, 0x00, 
  0x00, 0x00, 0xff, 0xff, 0xff, 0x1f, 0xe0, 0x00, 
  0x00, 0x01, 0xff, 0xff, 0xff, 0x0f, 0xfe, 0x00, 
  0x00, 0x01, 0xff, 0xff, 0xff, 0x8f, 0xff, 0x80, 
  0x00, 0x03, 0xff, 0xff, 0xff, 0x8f, 0xff, 0xe0, 
  0x00, 0x03, 0xff, 0xff, 0xff, 0x87, 0xff, 0xf0, 
  0x00, 0x03, 0xff, 0xff, 0xff, 0x80, 0x7f, 0xf8, 
  0x00, 0x1f, 0xff, 0xff, 0xff, 0xe0, 0x1f, 0xfc, 
  0x00, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x0f, 0xfc, 
  0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0x07, 0xfe, 
  0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc3, 0xfe, 
  0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe1, 0xfe, 
  0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf1, 0xff, 
  0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xff, 
  0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0xff, 
  0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x7f, 
  0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x7f, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x7f, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x7f, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x7e, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x7e, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x7c, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x7c, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x78, 
  0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0xf0, 
  0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0xe0, 
  0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf9, 0xc0, 
  0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf9, 0x00, 
  0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x00, 
  0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x00, 
  0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 
  0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x00, 
  0x01, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x00, 
  0x00, 0x3f, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x00, 
};

const lv_img_dsc_t duoyun = {
  .header.cf = LV_IMG_CF_ALPHA_1BIT,
  .header.always_zero = 0,
  .header.reserved = 0,
  .header.w = 64,
  .header.h = 45,
  .data_size = 360,
  .data = duoyun_map,
};


#ifndef LV_ATTRIBUTE_IMG_LEIZHENYU
#define LV_ATTRIBUTE_IMG_LEIZHENYU
#endif

const LV_ATTRIBUTE_MEM_ALIGN LV_ATTRIBUTE_LARGE_CONST LV_ATTRIBUTE_IMG_LEIZHENYU uint8_t leizhenyu_map[] = {
  0x00, 0x00, 0x00, 0x07, 0xf0, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x3f, 0xfe, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x01, 0xff, 0xff, 0xc0, 0x00, 0x00, 
  0x00, 0x00, 0x03, 0xff, 0xff, 0xe0, 0x00, 0x00, 
  0x00, 0x00, 0x07, 0xff, 0xff, 0xf0, 0x00, 0x00, 
  0x00, 0x00, 0x07, 0xff, 0xff, 0xf0, 0x00, 0x00, 
  0x00, 0x00, 0x0f, 0xff, 0xff, 0xf8, 0x00, 0x00, 
  0x00, 0x00, 0x1f, 0xff, 0xff, 0xf8, 0x00, 0x00, 
  0x00, 0x00, 0x1f, 0xff, 0xff, 0xfc, 0x00, 0x00, 
  0x00, 0x00, 0x1f, 0xff, 0xff, 0xfc, 0x00, 0x00, 
  0x00, 0x00, 0x1f, 0xff, 0xff, 0xfc, 0x00, 0x00, 
  0x00, 0x00, 0x3f, 0xff, 0xff, 0xfe, 0x00, 0x00, 
  0x00, 0x03, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 
  0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 
  0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 
  0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 
  0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 
  0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 
  0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 
  0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 
  0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 
  0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 
  0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 
  0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 
  0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 
  0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 
  0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 
  0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 
  0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 
  0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 
  0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 
  0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 
  0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 
  0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 
  0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 
  0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 
  0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 
  0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 
  0x00, 0x03, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 
  0x00, 0x01, 0x80, 0x01, 0x00, 0x03, 0x00, 0x00, 
  0x00, 0x03, 0xc0, 0x03, 0x00, 0x07, 0x80, 0x00, 
  0x00, 0x07, 0xc0, 0x07, 0x00, 0x0f, 0xc0, 0x00, 
  0x00, 0x0f, 0xe0, 0x0f, 0x00, 0x1f, 0xc0, 0x00, 
  0x00, 0x1f, 0xe0, 0x0f, 0x00, 0x1f, 0xe0, 0x00, 
  0x00, 0x1f, 0xf0, 0x1f, 0xf0, 0x3f, 0xe0, 0x00, 
  0x00, 0x3f, 0xf0, 0x3f, 0xe0, 0x3f, 0xe0, 0x00, 
  0x00, 0x3f, 0xf0, 0x3f, 0xe0, 0x7f, 0xf0, 0x00, 
  0x00, 0x3f, 0xf0, 0x03, 0xc0, 0x7f, 0xf0, 0x00, 
  0x00, 0x3f, 0xf0, 0x03, 0xc0, 0x7f, 0xf0, 0x00, 
  0x00, 0x3f, 0xf0, 0x03, 0x80, 0x7f, 0xe0, 0x00, 
  0x00, 0x1f, 0xe0, 0x03, 0x00, 0x3f, 0xe0, 0x00, 
  0x00, 0x1f, 0xe0, 0x03, 0x00, 0x1f, 0xc0, 0x00, 
  0x00, 0x07, 0x80, 0x02, 0x00, 0x0f, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
};

const lv_img_dsc_t leizhenyu = {
  .header.cf = LV_IMG_CF_ALPHA_1BIT,
  .header.always_zero = 0,
  .header.reserved = 0,
  .header.w = 64,
  .header.h = 64,
  .data_size = 512,
  .data = leizhenyu_map,
};


#ifndef LV_ATTRIBUTE_IMG_QINGTIAN
#define LV_ATTRIBUTE_IMG_QINGTIAN
#endif

const LV_ATTRIBUTE_MEM_ALIGN LV_ATTRIBUTE_LARGE_CONST LV_ATTRIBUTE_IMG_QINGTIAN uint8_t qingtian_map[] = {
  0x00, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x03, 0xc0, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x03, 0xc0, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x03, 0xc0, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x03, 0xc0, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x03, 0xc0, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x03, 0xc0, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x03, 0xc0, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x03, 0xc0, 0x00, 0x00, 0x00, 
  0x00, 0x70, 0x00, 0x03, 0xc0, 0x00, 0x0e, 0x00, 
  0x00, 0x78, 0x00, 0x03, 0xc0, 0x00, 0x1e, 0x00, 
  0x00, 0x7c, 0x00, 0x03, 0x80, 0x00, 0x3e, 0x00, 
  0x00, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x7c, 0x00, 
  0x00, 0x1f, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x00, 
  0x00, 0x0f, 0x80, 0x00, 0x00, 0x01, 0xf0, 0x00, 
  0x00, 0x07, 0xc0, 0x00, 0x00, 0x03, 0xe0, 0x00, 
  0x00, 0x03, 0xe0, 0x3f, 0xf8, 0x07, 0xc0, 0x00, 
  0x00, 0x01, 0xc0, 0xff, 0xff, 0x03, 0x80, 0x00, 
  0x00, 0x00, 0x81, 0xff, 0xff, 0x81, 0x00, 0x00, 
  0x00, 0x00, 0x07, 0xff, 0xff, 0xe0, 0x00, 0x00, 
  0x00, 0x00, 0x0f, 0xff, 0xff, 0xf0, 0x00, 0x00, 
  0x00, 0x00, 0x1f, 0xff, 0xff, 0xf8, 0x00, 0x00, 
  0x00, 0x00, 0x1f, 0xff, 0xff, 0xf8, 0x00, 0x00, 
  0x00, 0x00, 0x3f, 0xff, 0xff, 0xfc, 0x00, 0x00, 
  0x00, 0x00, 0x7f, 0xff, 0xff, 0xfe, 0x00, 0x00, 
  0x00, 0x00, 0x7f, 0xff, 0xff, 0xfe, 0x00, 0x00, 
  0x00, 0x00, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x00, 
  0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 
  0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 
  0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 
  0x7f, 0xf0, 0xff, 0xff, 0xff, 0xff, 0x07, 0xfe, 
  0xff, 0xf0, 0xff, 0xff, 0xff, 0xff, 0x0f, 0xff, 
  0xff, 0xf0, 0xff, 0xff, 0xff, 0xff, 0x0f, 0xff, 
  0x7f, 0xe0, 0xff, 0xff, 0xff, 0xff, 0x0f, 0xfe, 
  0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 
  0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 
  0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 
  0x00, 0x00, 0x7f, 0xff, 0xff, 0xfe, 0x00, 0x00, 
  0x00, 0x00, 0x7f, 0xff, 0xff, 0xfe, 0x00, 0x00, 
  0x00, 0x00, 0x7f, 0xff, 0xff, 0xfe, 0x00, 0x00, 
  0x00, 0x00, 0x3f, 0xff, 0xff, 0xfc, 0x00, 0x00, 
  0x00, 0x00, 0x1f, 0xff, 0xff, 0xf8, 0x00, 0x00, 
  0x00, 0x00, 0x1f, 0xff, 0xff, 0xf8, 0x00, 0x00, 
  0x00, 0x00, 0x0f, 0xff, 0xff, 0xf0, 0x00, 0x00, 
  0x00, 0x00, 0x07, 0xff, 0xff, 0xe0, 0x00, 0x00, 
  0x00, 0x00, 0x81, 0xff, 0xff, 0x81, 0x00, 0x00, 
  0x00, 0x03, 0xc0, 0xff, 0xff, 0x03, 0x80, 0x00, 
  0x00, 0x07, 0xc0, 0x1f, 0xf8, 0x07, 0xc0, 0x00, 
  0x00, 0x0f, 0xc0, 0x00, 0x00, 0x03, 0xe0, 0x00, 
  0x00, 0x1f, 0x80, 0x00, 0x00, 0x01, 0xf0, 0x00, 
  0x00, 0x3f, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x00, 
  0x00, 0x7e, 0x00, 0x00, 0x00, 0x00, 0x7c, 0x00, 
  0x00, 0x7c, 0x00, 0x03, 0x80, 0x00, 0x3e, 0x00, 
  0x00, 0x78, 0x00, 0x03, 0xc0, 0x00, 0x1e, 0x00, 
  0x00, 0x70, 0x00, 0x03, 0xc0, 0x00, 0x0e, 0x00, 
  0x00, 0x00, 0x00, 0x03, 0xc0, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x03, 0xc0, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x03, 0xc0, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x03, 0xc0, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x03, 0xc0, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x03, 0xc0, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x03, 0xc0, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x03, 0xc0, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x03, 0x80, 0x00, 0x00, 0x00, 
};

const lv_img_dsc_t qingtian = {
  .header.cf = LV_IMG_CF_ALPHA_1BIT,
  .header.always_zero = 0,
  .header.reserved = 0,
  .header.w = 64,
  .header.h = 64,
  .data_size = 512,
  .data = qingtian_map,
};

#ifndef LV_ATTRIBUTE_IMG_QINGZHUANDUOYUN
#define LV_ATTRIBUTE_IMG_QINGZHUANDUOYUN
#endif

const LV_ATTRIBUTE_MEM_ALIGN LV_ATTRIBUTE_LARGE_CONST LV_ATTRIBUTE_IMG_QINGZHUANDUOYUN uint8_t qingzhuanduoyun_map[] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x03, 0x00, 0x18, 0x00, 0xc0, 
  0x00, 0x00, 0x00, 0x03, 0x80, 0x18, 0x01, 0xc0, 
  0x00, 0x00, 0x00, 0x01, 0xc0, 0x00, 0x03, 0xc0, 
  0x00, 0x00, 0x00, 0x00, 0xe0, 0x00, 0x07, 0x80, 
  0x00, 0x00, 0x00, 0x00, 0x70, 0x3e, 0x07, 0x00, 
  0x00, 0x00, 0x01, 0xf8, 0x01, 0xff, 0x86, 0x00, 
  0x00, 0x00, 0x0f, 0xfe, 0x03, 0xff, 0xc0, 0x00, 
  0x00, 0x00, 0x1f, 0xff, 0x87, 0xff, 0xf0, 0x00, 
  0x00, 0x00, 0x7f, 0xff, 0xc3, 0xff, 0xf0, 0x00, 
  0x00, 0x00, 0xff, 0xff, 0xe1, 0xff, 0xf8, 0x00, 
  0x00, 0x01, 0xff, 0xff, 0xf1, 0xff, 0xf8, 0x00, 
  0x00, 0x01, 0xff, 0xff, 0xf8, 0xff, 0xfc, 0x00, 
  0x00, 0x03, 0xff, 0xff, 0xf8, 0xff, 0xfc, 0x00, 
  0x00, 0x03, 0xff, 0xff, 0xfc, 0xff, 0xfc, 0x00, 
  0x00, 0x07, 0xff, 0xff, 0xfc, 0xff, 0xfc, 0x7f, 
  0x00, 0x07, 0xff, 0xff, 0xfc, 0x3f, 0xfc, 0x7f, 
  0x00, 0x07, 0xff, 0xff, 0xfe, 0x07, 0xfc, 0x00, 
  0x00, 0x1f, 0xff, 0xff, 0xff, 0x01, 0xfc, 0x00, 
  0x01, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xfc, 0x00, 
  0x03, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x78, 0x00, 
  0x0f, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x38, 0x00, 
  0x1f, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x10, 0x00, 
  0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 
  0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x00, 
  0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0x86, 0x00, 
  0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc7, 0x00, 
  0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc7, 0x80, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc3, 0xc0, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe1, 0xc0, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xc0, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x00, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x00, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x00, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 
  0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 
  0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 
  0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x00, 
  0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x00, 
  0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 
  0x0f, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x00, 
  0x07, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x00, 
  0x03, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x00, 
  0x00, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x00, 
};

const lv_img_dsc_t qingzhuanduoyun = {
  .header.cf = LV_IMG_CF_ALPHA_1BIT,
  .header.always_zero = 0,
  .header.reserved = 0,
  .header.w = 64,
  .header.h = 49,
  .data_size = 392,
  .data = qingzhuanduoyun_map,
};


#ifndef LV_ATTRIBUTE_IMG_SHACHENBAO
#define LV_ATTRIBUTE_IMG_SHACHENBAO
#endif

const LV_ATTRIBUTE_MEM_ALIGN LV_ATTRIBUTE_LARGE_CONST LV_ATTRIBUTE_IMG_SHACHENBAO uint8_t shachenbao_map[] = {
  0x00, 0x00, 0x00, 0x00, 0x7e, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x03, 0xff, 0xc0, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x07, 0xff, 0xe0, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x0f, 0xff, 0xf0, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x1f, 0x00, 0xf8, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x3e, 0x00, 0x7c, 0x00, 0x00, 
  0x00, 0x01, 0xe0, 0x3c, 0x00, 0x3e, 0x00, 0x00, 
  0x00, 0x03, 0xe0, 0x78, 0x00, 0x1e, 0x00, 0x00, 
  0x00, 0x03, 0xf0, 0x78, 0x00, 0x0e, 0x00, 0x00, 
  0x00, 0x03, 0xe0, 0x70, 0x00, 0x0f, 0x00, 0x00, 
  0x02, 0x01, 0xc0, 0x70, 0x00, 0x0f, 0x1f, 0x80, 
  0x02, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x1f, 0xe0, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x1f, 0xf0, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x03, 0xf8, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x7c, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x3e, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x1e, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x1e, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0x00, 0x0f, 
  0x00, 0x00, 0x00, 0x00, 0x03, 0xf8, 0x00, 0x0f, 
  0x03, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x0f, 
  0x03, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x0f, 
  0x03, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x0f, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 
  0x00, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1e, 
  0x00, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3e, 
  0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7c, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 
  0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 
  0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 
  0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x3e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x3e, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 
  0x1c, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x00, 
  0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 
  0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3e, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 
  0x00, 0x00, 0x00, 0x40, 0x00, 0xe0, 0x0f, 0x00, 
  0x00, 0x0c, 0x00, 0x60, 0x01, 0xe0, 0x0f, 0x00, 
  0x00, 0x0c, 0x00, 0x40, 0x00, 0xf0, 0x0f, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x3e, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xfe, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xfc, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xf8, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xe0, 0x00, 
};

const lv_img_dsc_t shachenbao = {
  .header.cf = LV_IMG_CF_ALPHA_1BIT,
  .header.always_zero = 0,
  .header.reserved = 0,
  .header.w = 64,
  .header.h = 56,
  .data_size = 448,
  .data = shachenbao_map,
};

#ifndef LV_ATTRIBUTE_IMG_WUMAI
#define LV_ATTRIBUTE_IMG_WUMAI
#endif

const LV_ATTRIBUTE_MEM_ALIGN LV_ATTRIBUTE_LARGE_CONST LV_ATTRIBUTE_IMG_WUMAI uint8_t wumai_map[] = {
  0x00, 0x00, 0x00, 0x07, 0xf0, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x3f, 0xfe, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0xff, 0xff, 0x80, 0x00, 0x00, 
  0x00, 0x00, 0x01, 0xff, 0xff, 0xc0, 0x00, 0x00, 
  0x00, 0x00, 0x03, 0xff, 0xff, 0xe0, 0x00, 0x00, 
  0x00, 0x00, 0x07, 0xff, 0xff, 0xf0, 0x00, 0x00, 
  0x00, 0x00, 0x0f, 0xff, 0xff, 0xf8, 0x00, 0x00, 
  0x00, 0x00, 0x1f, 0xff, 0xff, 0xfc, 0x00, 0x00, 
  0x00, 0x00, 0x1f, 0xff, 0xff, 0xfc, 0x00, 0x00, 
  0x00, 0x00, 0x3f, 0xff, 0xff, 0xfe, 0x00, 0x00, 
  0x00, 0x00, 0x3f, 0xff, 0xff, 0xfe, 0x00, 0x00, 
  0x00, 0x00, 0x3f, 0xff, 0xff, 0xfe, 0x00, 0x00, 
  0x00, 0x00, 0x7f, 0xff, 0xff, 0xff, 0x00, 0x00, 
  0x00, 0x00, 0x7f, 0xff, 0xff, 0xff, 0x00, 0x00, 
  0x00, 0x07, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x00, 
  0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 
  0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 
  0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 
  0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 
  0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 
  0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 
  0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 
  0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 
  0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 
  0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 
  0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 
  0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 
  0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 
  0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 
  0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 
  0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 
  0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 
  0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 
  0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 
  0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 
  0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 
  0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 
  0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 
  0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 
  0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 
  0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 
  0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 
  0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x00, 
  0x00, 0x00, 0x7f, 0xff, 0xff, 0xfe, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x07, 0xff, 0xe1, 0xf8, 0x1f, 0xff, 0x87, 0xe0, 
  0x07, 0xff, 0xf1, 0xfc, 0x3f, 0xff, 0x8f, 0xe0, 
  0x07, 0xff, 0xf1, 0xfc, 0x3f, 0xff, 0x8f, 0xe0, 
  0x07, 0xff, 0xf1, 0xfc, 0x3f, 0xff, 0x8f, 0xe0, 
  0x07, 0xff, 0xe1, 0xf8, 0x1f, 0xff, 0x87, 0xe0, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x03, 0xc0, 0xff, 0xf0, 0x0f, 0x03, 0xff, 0xc0, 
  0x07, 0xf1, 0xff, 0xf8, 0x1f, 0x8f, 0xff, 0xe0, 
  0x07, 0xf1, 0xff, 0xfc, 0x3f, 0x8f, 0xff, 0xe0, 
  0x07, 0xf1, 0xff, 0xfc, 0x3f, 0x8f, 0xff, 0xe0, 
  0x07, 0xf1, 0xff, 0xfc, 0x3f, 0x8f, 0xff, 0xe0, 
  0x03, 0xe0, 0xff, 0xf8, 0x1f, 0x07, 0xff, 0xc0, 
};

const lv_img_dsc_t wumai = {
  .header.cf = LV_IMG_CF_ALPHA_1BIT,
  .header.always_zero = 0,
  .header.reserved = 0,
  .header.w = 64,
  .header.h = 64,
  .data_size = 512,
  .data = wumai_map,
};



#ifndef LV_ATTRIBUTE_IMG_WEIXIAO
#define LV_ATTRIBUTE_IMG_WEIXIAO
#endif

const LV_ATTRIBUTE_MEM_ALIGN LV_ATTRIBUTE_LARGE_CONST LV_ATTRIBUTE_IMG_WEIXIAO uint8_t weixiao_map[] = {
  0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 
  0x00, 0x0f, 0xf0, 0x00, 
  0x00, 0x7f, 0xfc, 0x00, 
  0x00, 0xf0, 0x0f, 0x00, 
  0x03, 0xc0, 0x03, 0x80, 
  0x07, 0x00, 0x01, 0xc0, 
  0x06, 0x00, 0x00, 0xe0, 
  0x0c, 0x00, 0x00, 0x70, 
  0x1c, 0x00, 0x00, 0x30, 
  0x18, 0x30, 0x0c, 0x38, 
  0x18, 0x78, 0x1c, 0x18, 
  0x30, 0x78, 0x1c, 0x18, 
  0x30, 0x30, 0x08, 0x0c, 
  0x30, 0x00, 0x00, 0x0c, 
  0x30, 0x00, 0x00, 0x0c, 
  0x30, 0x00, 0x00, 0x0c, 
  0x30, 0xc0, 0x06, 0x0c, 
  0x30, 0xc0, 0x06, 0x1c, 
  0x30, 0x60, 0x06, 0x18, 
  0x18, 0x70, 0x0c, 0x18, 
  0x18, 0x38, 0x1c, 0x38, 
  0x0c, 0x1f, 0xf8, 0x30, 
  0x0e, 0x07, 0xe0, 0x70, 
  0x07, 0x00, 0x00, 0xe0, 
  0x03, 0x80, 0x01, 0xc0, 
  0x01, 0xc0, 0x07, 0x80, 
  0x00, 0xf8, 0x1f, 0x00, 
  0x00, 0x3f, 0xfc, 0x00, 
  0x00, 0x07, 0xe0, 0x00, 
  0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 
};

const lv_img_dsc_t weixiao = {
  .header.cf = LV_IMG_CF_ALPHA_1BIT,
  .header.always_zero = 0,
  .header.reserved = 0,
  .header.w = 32,
  .header.h = 32,
  .data_size = 128,
  .data = weixiao_map,
};

#ifndef LV_ATTRIBUTE_IMG_YIBAN
#define LV_ATTRIBUTE_IMG_YIBAN
#endif

const LV_ATTRIBUTE_MEM_ALIGN LV_ATTRIBUTE_LARGE_CONST LV_ATTRIBUTE_IMG_YIBAN uint8_t yiban_map[] = {
  0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 
  0x00, 0x0f, 0xf0, 0x00, 
  0x00, 0x3f, 0xfc, 0x00, 
  0x00, 0xf8, 0x1f, 0x00, 
  0x01, 0xc0, 0x03, 0x80, 
  0x03, 0x80, 0x01, 0xc0, 
  0x07, 0x00, 0x00, 0xe0, 
  0x0e, 0x00, 0x00, 0x70, 
  0x0c, 0x00, 0x00, 0x30, 
  0x18, 0x30, 0x0c, 0x18, 
  0x18, 0x78, 0x1e, 0x18, 
  0x38, 0x78, 0x1e, 0x18, 
  0x30, 0x30, 0x0c, 0x0c, 
  0x30, 0x00, 0x00, 0x0c, 
  0x30, 0x00, 0x00, 0x0c, 
  0x30, 0x00, 0x00, 0x0c, 
  0x30, 0x00, 0x00, 0x0c, 
  0x30, 0x00, 0x00, 0x0c, 
  0x38, 0x00, 0x00, 0x18, 
  0x18, 0x3f, 0xfc, 0x18, 
  0x18, 0x3f, 0xfc, 0x18, 
  0x0c, 0x00, 0x00, 0x30, 
  0x0e, 0x00, 0x00, 0x70, 
  0x07, 0x00, 0x00, 0xe0, 
  0x03, 0x80, 0x01, 0xc0, 
  0x01, 0xc0, 0x03, 0x80, 
  0x00, 0xf8, 0x1f, 0x00, 
  0x00, 0x3f, 0xfc, 0x00, 
  0x00, 0x07, 0xe0, 0x00, 
  0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 
};

const lv_img_dsc_t yiban = {
  .header.cf = LV_IMG_CF_ALPHA_1BIT,
  .header.always_zero = 0,
  .header.reserved = 0,
  .header.w = 32,
  .header.h = 32,
  .data_size = 128,
  .data = yiban_map,
};

#ifndef LV_ATTRIBUTE_IMG_BUKAIXIN
#define LV_ATTRIBUTE_IMG_BUKAIXIN
#endif

const LV_ATTRIBUTE_MEM_ALIGN LV_ATTRIBUTE_LARGE_CONST LV_ATTRIBUTE_IMG_BUKAIXIN uint8_t bukaixin_map[] = {
  0x00, 0x00, 0x00, 0x00, 
  0x00, 0x0f, 0xf0, 0x00, 
  0x00, 0x7f, 0xfe, 0x00, 
  0x00, 0xe0, 0x07, 0x00, 
  0x03, 0x80, 0x01, 0xc0, 
  0x07, 0x00, 0x00, 0xe0, 
  0x0e, 0x00, 0x00, 0x70, 
  0x0c, 0x00, 0x00, 0x30, 
  0x18, 0x00, 0x00, 0x18, 
  0x30, 0xe0, 0x07, 0x0c, 
  0x31, 0xf0, 0x0f, 0x8c, 
  0x21, 0xf0, 0x0f, 0x84, 
  0x61, 0xf0, 0x0f, 0x86, 
  0x60, 0xe0, 0x0f, 0x06, 
  0x60, 0x00, 0x00, 0x06, 
  0x60, 0x00, 0x00, 0x06, 
  0x60, 0x00, 0x00, 0x06, 
  0x60, 0x00, 0x00, 0x06, 
  0x60, 0x00, 0x00, 0x06, 
  0x60, 0x07, 0xe0, 0x06, 
  0x20, 0x1f, 0xf8, 0x0c, 
  0x30, 0x38, 0x1c, 0x0c, 
  0x30, 0x60, 0x06, 0x0c, 
  0x18, 0x60, 0x06, 0x18, 
  0x0c, 0x00, 0x00, 0x30, 
  0x0e, 0x00, 0x00, 0x70, 
  0x07, 0x00, 0x00, 0xe0, 
  0x03, 0x80, 0x01, 0xc0, 
  0x00, 0xe0, 0x0f, 0x00, 
  0x00, 0x7f, 0xfe, 0x00, 
  0x00, 0x0f, 0xf0, 0x00, 
  0x00, 0x00, 0x00, 0x00, 
};

const lv_img_dsc_t bukaixin = {
  .header.cf = LV_IMG_CF_ALPHA_1BIT,
  .header.always_zero = 0,
  .header.reserved = 0,
  .header.w = 32,
  .header.h = 32,
  .data_size = 128,
  .data = bukaixin_map,
};

#endif